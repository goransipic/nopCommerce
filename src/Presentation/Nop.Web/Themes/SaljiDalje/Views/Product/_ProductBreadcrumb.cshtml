@model ProductDetailsModel.ProductBreadcrumbModel
@*@using Nop.Core.Domain.Common
@inject CommonSettings commonSettings
@{
    var breadcrumbDelimiter = commonSettings.BreadcrumbDelimiter;
}*@
@if (Model.Enabled)
{
    <nav class="mb-3 pt-md-3" aria-label="breadcrumb">
        <ol class="breadcrumb" itemscope itemtype="http://schema.org/BreadcrumbList">
            <li class="breadcrumb-item">
                <a href="@Url.RouteUrl("Homepage")">@T("Products.Breadcrumb.Top")</a>
            </li>
            @{ int position = 1; }
            @foreach (var category in Model.CategoryBreadcrumb)
            {
                <li class="breadcrumb-item" itemprop="itemListElement" itemscope itemtype="http://schema.org/ListItem">
                    <a href="@Url.RouteUrl("Category", new {SeName = category.SeName})" itemprop="item">
                        <span itemprop="name">@category.Name</span>
                    </a>
                    <meta itemprop="position" content="@position"/>
                </li>
                position++;
            }
            <li class="breadcrumb-item active" aria-current="page" itemprop="itemListElement" itemscope itemtype="http://schema.org/ListItem">
                <span itemprop="name">@Model.ProductName</span>
                <span itemprop="item" itemscope itemtype="http://schema.org/Thing" 
                      id="@Url.RouteUrl("Product", new {SeName = Model.ProductSeName})">
                </span>
                <meta itemprop="position" content="@position"/>
            </li>
        </ol>
    </nav>

    @*<div class="breadcrumb">
        <ul itemscope itemtype="http://schema.org/BreadcrumbList">
            @await Component.InvokeAsync("Widget", new {widgetZone = PublicWidgetZones.ProductBreadcrumbBefore, additionalData = Model})
            <li>
                <span>
                    <a href="@Url.RouteUrl("Homepage")">
                        <span>@T("Products.Breadcrumb.Top")</span>
                    </a>
                </span>
                <span class="delimiter">@breadcrumbDelimiter</span>
            </li>
            @{ int position = 1; }
            @foreach (var category in Model.CategoryBreadcrumb)
            {
                <li itemprop="itemListElement" itemscope itemtype="http://schema.org/ListItem">
                    <a href="@Url.RouteUrl("Category", new {SeName = category.SeName})" itemprop="item">
                        <span itemprop="name">@category.Name</span>
                    </a>
                    <span class="delimiter">@breadcrumbDelimiter</span>
                    <meta itemprop="position" content="@position"/>
                </li>
                position++;
            }

            <li itemprop="itemListElement" itemscope itemtype="http://schema.org/ListItem">
                <strong class="current-item" itemprop="name">@Model.ProductName</strong>
                <span itemprop="item" itemscope itemtype="http://schema.org/Thing"
                      id="@Url.RouteUrl("Product", new {SeName = Model.ProductSeName})">
                </span>
                <meta itemprop="position" content="@position"/>
                @await Component.InvokeAsync("Widget", new {widgetZone = PublicWidgetZones.ProductBreadcrumbAfter, additionalData = Model})
            </li>
        </ul>
    </div>*@
}