@model HeaderLinksModel
@using Nop.Core.Domain.Customers
@using Nop.Services.Configuration
@using Nop.Web.Framework.TagHelpers.Shared
@using Nop.Core
@inject Nop.Core.IWebHelper webHelper
@inject IStoreContext storeContext
@inject ISettingService settingService

@{
    int storeId = (await storeContext.GetCurrentStoreAsync()).Id;
    bool compareProductsEnabled = await settingService.GetSettingByKeyAsync("catalogsettings.compareproductsenabled", true, storeId, true);
}
@* <div class="header-links"> *@
    @*<ul>*@
        @* @await Component.InvokeAsync("Widget", new { widgetZone = PublicWidgetZones.HeaderLinksBefore, additionalData = Model }) *@
        @if (Model.IsAuthenticated)
        {
            @*<li>*@<a href="@Url.RouteUrl("CustomerInfo")" class="ico-account btn btn-sm text-primary d-none d-lg-block order-lg-3">@T("Account.MyAccount")@*@Model.CustomerName*@</a>/*</li>*/
            @*<li>*@<a href="@Url.RouteUrl("Logout")" class="ico-logout btn btn-sm text-primary d-none d-lg-block order-lg-3">@T("Account.Logout")</a>@*</li>*@
        }
        else
        {
            var returnUrl = Context.Request.Query.TryGetValue("returnUrl", out var url) && !StringValues.IsNullOrEmpty(url)
                ? url.ToString()
                : webHelper.GetRawUrl(Context.Request);

            @if (Model.RegistrationType != UserRegistrationType.Disabled)
            {
                @*<li><a href="@Url.RouteUrl("Register", new { returnUrl })" class="ico-register btn btn-sm text-primary d-none d-lg-block order-lg-3">@T("Account.Register")</a></li>*@
            }
            @*<li>*@<a href="@Url.RouteUrl("Login", new {returnUrl})" class="ico-login btn btn-sm text-primary d-none d-lg-block order-lg-3">
                <i class="fi-user me-2"></i>@T("Account.Login")
            </a>/*</li>*/
        }
        @if (Model.AllowPrivateMessages)
        {
            @*<li>*@
                <a href="@Url.RouteUrl("PrivateMessages", new { tab = "" })" class="ico-inbox btn btn-sm text-primary d-none d-lg-block order-lg-3">
                    <span class="inbox-label">@T("PrivateMessages.Inbox")</span>
                    <span class="inbox-unread">@Model.UnreadPrivateMessages</span>
                </a>
            @*</li>*@
        }
        @*@if (compareProductsEnabled)
                {
                    $1$<li>#1#<a href="@Url.RouteUrl("CompareProducts")" class="ico-compare btn btn-sm text-primary d-none d-lg-block order-lg-3">@T("Products.Compare.List")</a>$1$</li>#1#
                }*@
        @*@if (Model.WishlistEnabled)
        {
            $1$<li>#1#
                <a href="@Url.RouteUrl("Wishlist")" class="ico-wishlist btn btn-sm text-primary d-none d-lg-block order-lg-3">
                    <span class="wishlist-label">@T("Wishlist")</span>
                    <span class="wishlist-qty">@T("Wishlist.HeaderQuantity", Model.WishlistItems)</span>
                </a>
            $1$</li>#1#
        }*@
        @*@if (Model.ShoppingCartEnabled)
        {
            <li id="topcartlink">
                <a href="@Url.RouteUrl("ShoppingCart")" class="ico-cart">
                    <span class="cart-label">@T("ShoppingCart")</span>
                    <span class="cart-qty">@T("ShoppingCart.HeaderQuantity", Model.ShoppingCartItems)</span>
                </a>
            </li>
        }*@
        @*
        @await Component.InvokeAsync("Widget", new { widgetZone = PublicWidgetZones.HeaderLinksAfter, additionalData = Model })
    *@
    @*</ul>*@
    @if (Model.AllowPrivateMessages && !string.IsNullOrEmpty(Model.AlertMessage))
    {
        //new private message notification
        <script asp-location="Footer">
            $(document).ready(function () {
                displayPopupNotification('@Html.Raw(JavaScriptEncoder.Default.Encode(Model.AlertMessage))', 'success', false);
            });
        </script>
    }
    @*@if (Model.ShoppingCartEnabled)
    {
        <script asp-location="Footer">
            $(document).ready(function () {
                $('.header').on('mouseenter', '#topcartlink', function () {
                    $('#flyout-cart').addClass('active');
                });
                $('.header').on('mouseleave', '#topcartlink', function () {
                    $('#flyout-cart').removeClass('active');
                });
                $('.header').on('mouseenter', '#flyout-cart', function () {
                    $('#flyout-cart').addClass('active');
                });
                $('.header').on('mouseleave', '#flyout-cart', function () {
                    $('#flyout-cart').removeClass('active');
                });
            });
        </script>
    }*@
@*</div>*@
