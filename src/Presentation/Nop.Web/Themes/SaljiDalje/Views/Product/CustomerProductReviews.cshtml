@inject Nop.Services.Html.IHtmlFormatter htmlFormatter
@inject IHtmlHelper _htmlHelper
@using Nop.Web.Controllers.SaljiDalje.Core
@model CustomerProductReviewsModel
@{
    Layout = "_ColumnsTwo";

    //title
    NopHtml.AddTitleParts(T("PageTitle.CustomerProductReviews").Text);
    //page class
    NopHtml.AppendPageCssClassParts("html-account-page");
    NopHtml.AppendPageCssClassParts("html-my-product-reviews-list-page");
}

@section left
{
    @await Component.InvokeAsync("CustomerNavigation", new {selectedTabId = CustomerNavigationEnum.ProductReviews})
}

<div class="col-lg-8 col-md-7 mb-5">
<h1 class="h2">Reviews</h1>
<p class="pt-1 mb-4">Reviews you’ve received will be visible both here and on your public profile.</p>
<!-- Nav tabs-->
<ul class="nav nav-tabs flex-column flex-sm-row align-items-stretch align-items-sm-start border-bottom mb-4" role="tablist">
    <li class="nav-item me-sm-3 mb-3">
        <a class="nav-link text-center active" href="#reviews-about-you" data-bs-toggle="tab" role="tab" aria-controls="reviews-about-you" aria-selected="true">Reviews about you</a>
    </li>
    <li class="nav-item mb-3">
        <a class="nav-link text-center" href="#reviews-by-you" data-bs-toggle="tab" role="tab" aria-controls="reviews-by-you" aria-selected="false">Reviews by you</a>
    </li>
</ul>
<!-- Tabs content-->
<div class="tab-content pt-2">
<!-- Reviews about you tab-->
<div class="tab-pane fade show active" id="reviews-about-you" role="tabpanel">
    <div class="d-flex flex-sm-row flex-column align-items-sm-center align-items-stretch justify-content-between pb-4 mb-2 mb-md-3">
        <h3 class="h4 mb-sm-0"><i class="fi-star-filled mt-n1 me-2 lead align-middle text-warning"></i>4,9 (32 reviews)</h3>
        <div class="d-flex align-items-center ms-sm-4">
            <label class="fs-sm me-2 pe-1 text-nowrap" for="review-sorting1"><i class="fi-arrows-sort text-muted mt-n1 me-2"></i>Sort by:</label>
            <select class="form-select form-select-sm" id="review-sorting1">
                <option>Newest</option>
                <option>Oldest</option>
                <option>Popular</option>
                <option>High rating</option>
                <option>Low rating</option>
            </select>
        </div>
    </div>
    @if (Model.ProductReviews.Count > 0)
    {
        foreach (var review in Model.ProductReviews)
        {
            <div class="mb-4 pb-4 border-bottom">
                <div class="d-flex justify-content-between mb-3">
                    <div class="d-flex align-items-center pe-2">
                        <img class="rounded-circle me-1" src="img/avatars/06.jpg" width="48" alt="Avatar">
                        <div class="ps-2">
                            <h6 class="fs-base mb-0">@review.Title</h6>
                            <span class="star-rating">
                                <i class="star-rating-icon fi-star-filled active"></i>
                                <i class="star-rating-icon fi-star-filled active"></i>
                                <i class="star-rating-icon fi-star-filled active"></i>
                                <i class="star-rating-icon fi-star-filled active"></i>
                                <i class="star-rating-icon fi-star-filled active"></i>
                            </span>
                        </div>
                    </div><span class="text-muted fs-sm">Jan 17, 2021</span>
                </div>
                <p>Elementum ut quam tincidunt egestas vitae elit, hendrerit. Ullamcorper nulla amet lobortis elit, nibh condimentum enim. Aliquam felis nisl tellus sodales lectus dictum tristique proin vitae. Odio fermentum viverra tortor quis.</p>
                <div class="d-flex align-items-center">
                    <button class="btn-like" type="button">
                        <i class="fi-like"></i><span>(3)</span>
                    </button>
                    <div class="border-end me-1">&nbsp;</div>
                    <button class="btn-dislike" type="button">
                        <i class="fi-dislike"></i><span>(0)</span>
                    </button>
                </div>
            </div>
        }
    }
    <!-- Review-->
    <div class="mb-4 pb-4 border-bottom">
        <div class="d-flex justify-content-between mb-3">
            <div class="d-flex align-items-center pe-2">
                <img class="rounded-circle me-1" src="img/avatars/06.jpg" width="48" alt="Avatar">
                <div class="ps-2">
                    <h6 class="fs-base mb-0">Kathryn Murphy</h6>
                    <span class="star-rating">
                        <i class="star-rating-icon fi-star-filled active"></i><i class="star-rating-icon fi-star-filled active"></i><i class="star-rating-icon fi-star-filled active"></i><i class="star-rating-icon fi-star-filled active"></i><i class="star-rating-icon fi-star-filled active"></i>
                    </span>
                </div>
            </div><span class="text-muted fs-sm">Jan 17, 2021</span>
        </div>
        <p>Elementum ut quam tincidunt egestas vitae elit, hendrerit. Ullamcorper nulla amet lobortis elit, nibh condimentum enim. Aliquam felis nisl tellus sodales lectus dictum tristique proin vitae. Odio fermentum viverra tortor quis.</p>
        <div class="d-flex align-items-center">
            <button class="btn-like" type="button">
                <i class="fi-like"></i><span>(3)</span>
            </button>
            <div class="border-end me-1">&nbsp;</div>
            <button class="btn-dislike" type="button">
                <i class="fi-dislike"></i><span>(0)</span>
            </button>
        </div>
    </div>
    <!-- Review-->
    <div class="mb-4 pb-4 border-bottom">
        <div class="d-flex justify-content-between mb-3">
            <div class="d-flex align-items-center pe-2">
                <img class="rounded-circle me-1" src="img/avatars/13.png" width="48" alt="Avatar">
                <div class="ps-2">
                    <h6 class="fs-base mb-0">Darrell Steward</h6>
                    <span class="star-rating">
                        <i class="star-rating-icon fi-star-filled active"></i><i class="star-rating-icon fi-star-filled active"></i><i class="star-rating-icon fi-star-filled active"></i><i class="star-rating-icon fi-star-half active"></i><i class="star-rating-icon fi-star"></i>
                    </span>
                </div>
            </div><span class="text-muted fs-sm">Dec 1, 2020</span>
        </div>
        <p>Vel dictum nunc ut tristique. Egestas diam amet, ut proin hendrerit. Dui accumsan at phasellus tempus consequat dignissim tellus sodales.</p>
        <div class="d-flex align-items-center">
            <button class="btn-like" type="button">
                <i class="fi-like"></i><span>(0)</span>
            </button>
            <div class="border-end me-1">&nbsp;</div>
            <button class="btn-dislike" type="button">
                <i class="fi-dislike"></i><span>(1)</span>
            </button>
        </div>
    </div>
    <!-- Review-->
    <div class="mb-4 pb-4 border-bottom">
        <div class="d-flex justify-content-between mb-3">
            <div class="d-flex align-items-center pe-2">
                <img class="rounded-circle me-1" src="img/avatars/05.jpg" width="48" alt="Avatar">
                <div class="ps-2">
                    <h6 class="fs-base mb-0">Floyd Miles</h6>
                    <span class="star-rating">
                        <i class="star-rating-icon fi-star-filled active"></i><i class="star-rating-icon fi-star-filled active"></i><i class="star-rating-icon fi-star-filled active"></i><i class="star-rating-icon fi-star-filled active"></i><i class="star-rating-icon fi-star-filled active"></i>
                    </span>
                </div>
            </div><span class="text-muted fs-sm">Oct 28, 2020</span>
        </div>
        <p>Viverra nunc blandit sapien non imperdiet sit. Purus tempus elementum aliquam eu urna. A aenean duis non egestas at libero porttitor integer eget. Sed dictum lobortis laoreet gravida.</p>
        <div class="d-flex align-items-center">
            <button class="btn-like" type="button">
                <i class="fi-like"></i><span>(2)</span>
            </button>
            <div class="border-end me-1">&nbsp;</div>
            <button class="btn-dislike" type="button">
                <i class="fi-dislike"></i><span>(1)</span>
            </button>
        </div>
    </div>
    <!-- Review-->
    <div class="mb-4 pb-4 border-bottom">
        <div class="d-flex justify-content-between mb-3">
            <div class="d-flex align-items-center pe-2">
                <img class="rounded-circle me-1" src="img/avatars/04.jpg" width="48" alt="Avatar">
                <div class="ps-2">
                    <h6 class="fs-base mb-0">Ralph Edwards</h6>
                    <span class="star-rating">
                        <i class="star-rating-icon fi-star-filled active"></i><i class="star-rating-icon fi-star-filled active"></i><i class="star-rating-icon fi-star-filled active"></i><i class="star-rating-icon fi-star-filled active"></i><i class="star-rating-icon fi-star"></i>
                    </span>
                </div>
            </div><span class="text-muted fs-sm">Sep 14, 2020</span>
        </div>
        <p>Elementum nisl, egestas nam consectetur nisl, at pellentesque cras. Non sed ac vivamus dolor dignissim ut. Nisl sapien blandit pulvinar sagittis donec sociis ipsum arcu est. Tempus, rutrum morbi scelerisque tempor mi. Etiam urna, cras bibendum leo nec faucibus velit. Tempor lectus dignissim at auctor integer neque quam amet.</p>
        <div class="d-flex align-items-center">
            <button class="btn-like" type="button">
                <i class="fi-like"></i><span>(0)</span>
            </button>
            <div class="border-end me-1">&nbsp;</div>
            <button class="btn-dislike" type="button">
                <i class="fi-dislike"></i><span>(0)</span>
            </button>
        </div>
    </div>
    <!-- Pagination-->
    <nav class="mt-2" aria-label="Reviews pagination">
        <ul class="pagination">
            <li class="page-item d-sm-none">
                <span class="page-link page-link-static">1 / 5</span>
            </li>
            <li class="page-item active d-none d-sm-block" aria-current="page">
                <span class="page-link">1<span class="visually-hidden">(current)</span></span>
            </li>
            <li class="page-item d-none d-sm-block">
                <a class="page-link" href="#">2</a>
            </li>
            <li class="page-item d-none d-sm-block">
                <a class="page-link" href="#">3</a>
            </li>
            <li class="page-item d-none d-sm-block">...</li>
            <li class="page-item d-none d-sm-block">
                <a class="page-link" href="#">8</a>
            </li>
            <li class="page-item">
                <a class="page-link" href="#" aria-label="Next">
                    <i class="fi-chevron-right"></i>
                </a>
            </li>
        </ul>
    </nav>
</div>
<!-- Reviews by you tab-->
<div class="tab-pane fade" id="reviews-by-you" role="tabpanel">
    <div class="d-flex flex-sm-row flex-column align-items-sm-center align-items-stretch justify-content-between pb-4 mb-2 mb-md-3">
        <h3 class="h4 mb-sm-0">@Model.ProductReviews.Count reviews</h3>
        <div class="d-flex align-items-center ms-sm-4">
            <label class="fs-sm me-2 pe-1 text-nowrap" for="review-sorting2"><i class="fi-arrows-sort text-muted mt-n1 me-2"></i>Sort by:</label>
            <select class="form-select form-select-sm" id="review-sorting2">
                <option>Newest</option>
                <option>Oldest</option>
                <option>Popular</option>
                <option>High rating</option>
                <option>Low rating</option>
            </select>
        </div>
    </div>
    @if (Model.ProductReviews.Count > 0)
    {
        var i = 0;
        foreach (var review in Model.ProductReviews)
        {
            if (i < Model.ProductReviews.Count - 1)
            {
                <!-- Review-->
                <div class="mb-4 pb-4 border-bottom">
                    <div class="d-flex justify-content-between mb-3">
                        <div class="pe-2">
                            <h6 class="mb-0">
                                <span class="fw-normal text-muted me-1">For:</span><a class="text-decoration-none h6" href="@Url.RouteUrl("Product", new {SeName = review.ProductSeName})">@review.ProductName</a>
                            </h6>
                            <span class="star-rating">
                                <i class="star-rating-icon @{if (review.Rating >= 1){ <text>fi-star-filled active</text> }else{ <text>fi-star</text> }}"></i>
                                <i class="star-rating-icon @{if (review.Rating >= 2){ <text>fi-star-filled active</text> }else{ <text>fi-star</text> }}"></i>
                                <i class="star-rating-icon @{if (review.Rating >= 3){ <text>fi-star-filled active</text> }else{ <text>fi-star</text> }}"></i>
                                <i class="star-rating-icon @{if (review.Rating >= 4){ <text>fi-star-filled active</text> }else{ <text>fi-star</text> }}"></i>
                                <i class="star-rating-icon @{if (review.Rating >= 5){ <text>fi-star-filled active</text> }else{ <text>fi-star</text> }}"></i>
                            </span>
                        </div><span class="text-muted fs-sm">@review.WrittenOnStr</span>
                    </div>
                    <p>@Html.Raw(htmlFormatter.FormatText(review.ReviewText, false, true, false, false, false, false))</p>
                    <div class="d-flex align-items-center">
                        <button class="btn-like" type="button">
                            <i class="fi-like"></i><span>(2)</span>
                        </button>
                        <div class="border-end me-1">&nbsp;</div>
                        <button class="btn-dislike" type="button">
                            <i class="fi-dislike"></i><span>(1)</span>
                        </button>
                    </div>
                </div>
            }
            else
            {
                <!-- Review-->
                <div class="mb-2">
                    <div class="d-flex justify-content-between mb-3">
                        <div class="pe-2">
                            <h6 class="mb-0"> <span class="fw-normal text-muted me-1">For:</span>Duplex with Garage</h6>
                            <span class="star-rating">
                                <i class="star-rating-icon fi-star-filled active"></i><i class="star-rating-icon fi-star-filled active"></i><i class="star-rating-icon fi-star-filled active"></i><i class="star-rating-icon fi-star-filled active"></i><i class="star-rating-icon fi-star-filled active"></i>
                            </span>
                        </div><span class="text-muted fs-sm">Oct 24, 2020</span>
                    </div>
                    <p>Viverra nunc blandit sapien non imperdiet sit. Purus tempus elementum aliquam eu urna. A aenean duis non egestas at libero porttitor integer eget. Sed dictum lobortis laoreet gravida.</p>
                    <div class="d-flex align-items-center">
                        <button class="btn-like" type="button">
                            <i class="fi-like"></i><span>(2)</span>
                        </button>
                        <div class="border-end me-1">&nbsp;</div>
                        <button class="btn-dislike" type="button">
                            <i class="fi-dislike"></i><span>(0)</span>
                        </button>
                    </div>
                </div>
            }
            i++;
        }
        
        var pager = await Html.PagerAsync(Model.PagerModel);
        if (!string.IsNullOrEmpty(await pager.RenderHtmlContentAsync()))
        {
            <div class="pager">
                @pager
            </div>
        }
    }
</div>
</div>
</div>

@*<div class="col-lg-8 col-md-7 mb-5">
    <div class="page account-page my-product-reviews-list-page">
        <div class="page-title">
            <h1>@T("Account.MyAccount") - @T("Account.CustomerProductReviews")</h1>
        </div>
        <div class="page-body">
            @if (Model.ProductReviews.Count > 0)
            {
                foreach (var review in Model.ProductReviews)
                {
                    var ratingPercent = review.Rating * 20;
                    <div class="product-review-item">
                        <div class="review-item-head">
                            <div class="review-title">
                                <strong>@review.Title</strong>@(!string.IsNullOrEmpty(review.ApprovalStatus) ? $" - {review.ApprovalStatus}" : null)
                            </div>
                            <div class="product-review-box">
                                <div class="rating">
                                    <div style="width: @(ratingPercent)%">
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="review-content">
                            <div class="review-text">
                                @Html.Raw(htmlFormatter.FormatText(review.ReviewText, false, true, false, false, false, false))
                            </div>
                            @foreach (var reviewType in review.AdditionalProductReviewList.Where(x => x.Rating > 0))
                            {
                                var ratingExtPercent = reviewType.Rating * 20;
                                <div class="review-type-rating-ext">
                                    <div class="review-title">
                                        <i>@reviewType.Name</i>
                                    </div>
                                    <div class="product-review-box">
                                        <div class="rating">
                                            <div style="width: @(ratingExtPercent)%">
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <br/>
                                <br/>
                            }
                            <div class="review-info">
                                <span class="user">
                                    <label>@T("Account.CustomerProductReviews.ProductReviewFor"):</label>
                                    <a href="@Url.RouteUrl("Product", new {SeName = review.ProductSeName})">@review.ProductName</a>

                                </span>
                                <span class="separator">|</span>
                                <span class="date">
                                    <label>@T("Reviews.Date"):</label>
                                    <span>@review.WrittenOnStr</span>
                                </span>
                            </div>
                            @if (!string.IsNullOrEmpty(review.ReplyText))
                            {
                                <div class="reply">
                                    <div class="reply-header">
                                        @T("Reviews.Reply")
                                    </div>
                                    <div class="reply-text">
                                        @Html.Raw(htmlFormatter.FormatText(review.ReplyText, false, true, false, false, false, false))
                                    </div>
                                </div>
                            }
                        </div>
                    </div>
                }
                var pager = await Html.PagerAsync(Model.PagerModel);
                if (!string.IsNullOrEmpty(await pager.RenderHtmlContentAsync()))
                {
                    <div class="pager">
                        @pager
                    </div>
                }
            }
            else
            {
                <div class="no-data">
                    @T("Account.CustomerProductReviews.NoRecords")
                </div>
            }
        </div>
    </div>
</div>*@