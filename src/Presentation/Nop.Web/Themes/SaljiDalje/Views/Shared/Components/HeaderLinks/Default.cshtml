@model HeaderLinksModel
@using Nop.Core.Domain.Customers
@using Nop.Services.Configuration
@using Nop.Web.Framework.TagHelpers.Shared
@using Nop.Core
@using Nop.Core.Domain.Media
@using Nop.Services.Common
@using Nop.Services.Media
@inject Nop.Core.IWorkContext _context
@inject ISettingService settingService
@inject IGenericAttributeService _genericAttributeService
@inject IPictureService _pictureService
@inject MediaSettings _mediaSettings
@inject IWebHelper webHelper
@{
    // bool compareProductsEnabled = await settingService.GetSettingByKeyAsync("catalogsettings.compareproductsenabled", true, storeId, true);
}
@* <div class="header-links"> *@
@*<ul>*@
@* @await Component.InvokeAsync("Widget", new { widgetZone = PublicWidgetZones.HeaderLinksBefore, additionalData = Model }) *@
@if (Model.IsAuthenticated)
{
    var user = await _context.GetCurrentCustomerAsync();
    var phone = await _genericAttributeService.GetAttributeAsync<string>(user, NopCustomerDefaults.PhoneAttribute);

    var picture = await _pictureService.GetPictureUrlAsync(
        await _genericAttributeService.GetAttributeAsync<int>(user, NopCustomerDefaults.AvatarPictureIdAttribute),
        _mediaSettings.AvatarPictureSize,
        true);

    <div class="dropdown d-none d-lg-block order-lg-3 my-n2 me-3">
        <a class="d-block py-2" href="@Url.RouteUrl("CustomerInfo")">
            <img class="rounded-circle" src="@picture" width="40" alt="@user.Username">
        </a>
        <div class="dropdown-menu dropdown-menu-end">
            <div class="d-flex align-items-start border-bottom px-3 py-1 mb-2" style="width: 16rem;">
                <img class="rounded-circle" src="@picture" width="48" alt="@user.Username">
                <div class="ps-2">
                    <h6 class="fs-base mb-0">@user.Username</h6>
                    <ul class="list-unstyled fs-sm py-2 mb-0">
                        <li>
                            <a class="nav-link fw-normal p-0" href="#">
                                <i class="fi-phone opacity-60 me-2"></i>@phone
                            </a>
                        </li>
                        <li>
                            <a class="nav-link fw-normal p-0 text-truncate" href="#">
                                <i class="fi-mail opacity-60 me-2"></i>@user.Email
                            </a>
                        </li>
                    </ul>
                </div>
            </div>
            <a class="dropdown-item" asp-controller="Customer" asp-action="Info">
                <i class="fi-user opacity-60 me-2"></i>Personal Info
            </a>
            <a class="dropdown-item" asp-controller="CustomerInfo" asp-action="CustomerAds">
                <i class="fi-home opacity-60 me-2"></i>My Ads
            </a>
            <a class="dropdown-item"
               asp-controller="Customer" asp-action="ChangePassword">
                <i class="fi-lock opacity-60 me-2"></i>Password &amp; Security
            </a>
            <a class="dropdown-item" asp-controller="ShoppingCart" asp-action="Wishlist">
                <i class="fi-heart opacity-60 me-2"></i>Wishlist
            </a>
            <a class="dropdown-item" asp-controller="CustomerInfo" asp-action="Notification">
                <i class="fi-bell opacity-60 me-2"></i>Notifications
            </a>
            <div class="dropdown-divider"></div>
            <a class="dropdown-item" href="@Url.RouteUrl("Logout")"><i class="fi-logout opacity-60 me-2"></i>Sign Out</a>
        </div>
    </div>
}
else
{
    var returnUrl = Context.Request.Query.TryGetValue("returnUrl", out var url) && !StringValues.IsNullOrEmpty(url)
        ? url.ToString()
        : webHelper.GetRawUrl(Context.Request);

    @if (Model.RegistrationType != UserRegistrationType.Disabled)
    {
                @*<li><a href="@Url.RouteUrl("Register", new { returnUrl })" class="ico-register btn btn-sm text-primary d-none d-lg-block order-lg-3">@T("Account.Register")</a></li>*@
    }
            @*<li>*@
    <a href="@Url.RouteUrl("Login", new {returnUrl})" class="ico-login btn btn-sm text-primary d-none d-lg-block order-lg-3">
        <i class="fi-user me-2"></i>@T("Account.Login")
    </a> /*</li>*/
}
@if (Model.AllowPrivateMessages)
{
            @*<li>*@
    <a href="@Url.RouteUrl("PrivateMessages", new {tab = ""})" class="ico-inbox btn btn-sm text-primary d-none d-lg-block order-lg-3">
        <span class="inbox-label">@T("PrivateMessages.Inbox")</span>
        <span class="inbox-unread">@Model.UnreadPrivateMessages</span>
    </a>
            @*</li>*@
}
@*@if (compareProductsEnabled)
                {
                    $1$<li>#1#<a href="@Url.RouteUrl("CompareProducts")" class="ico-compare btn btn-sm text-primary d-none d-lg-block order-lg-3">@T("Products.Compare.List")</a>$1$</li>#1#
                }*@
@*@if (Model.WishlistEnabled)
        {
            $1$<li>#1#
                <a href="@Url.RouteUrl("Wishlist")" class="ico-wishlist btn btn-sm text-primary d-none d-lg-block order-lg-3">
                    <span class="wishlist-label">@T("Wishlist")</span>
                    <span class="wishlist-qty">@T("Wishlist.HeaderQuantity", Model.WishlistItems)</span>
                </a>
            $1$</li>#1#
        }*@
@*@if (Model.ShoppingCartEnabled)
        {
            <li id="topcartlink">
                <a href="@Url.RouteUrl("ShoppingCart")" class="ico-cart">
                    <span class="cart-label">@T("ShoppingCart")</span>
                    <span class="cart-qty">@T("ShoppingCart.HeaderQuantity", Model.ShoppingCartItems)</span>
                </a>
            </li>
        }*@
@*
        @await Component.InvokeAsync("Widget", new { widgetZone = PublicWidgetZones.HeaderLinksAfter, additionalData = Model })
    *@
@*</ul>*@
@if (Model.AllowPrivateMessages && !string.IsNullOrEmpty(Model.AlertMessage))
{
    //new private message notification
    <script asp-location="Footer">
            $(document).ready(function () {
                displayPopupNotification('@Html.Raw(JavaScriptEncoder.Default.Encode(Model.AlertMessage))', 'success', false);
            });
        </script>
}
@*@if (Model.ShoppingCartEnabled)
    {
        <script asp-location="Footer">
            $(document).ready(function () {
                $('.header').on('mouseenter', '#topcartlink', function () {
                    $('#flyout-cart').addClass('active');
                });
                $('.header').on('mouseleave', '#topcartlink', function () {
                    $('#flyout-cart').removeClass('active');
                });
                $('.header').on('mouseenter', '#flyout-cart', function () {
                    $('#flyout-cart').addClass('active');
                });
                $('.header').on('mouseleave', '#flyout-cart', function () {
                    $('#flyout-cart').removeClass('active');
                });
            });
        </script>
    }*@
@*</div>*@