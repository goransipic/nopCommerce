@using Nop.Web.Controllers.SaljiDalje.Core
@using Nop.Core
@using Nop.Core.Domain.Customers
@using Nop.Services.Common
@using Microsoft.AspNetCore.Mvc.TagHelpers
@using Nop.Core.Domain.Media
@using Nop.Services.Media
@model CustomerNavigationModel
@inject IWorkContext _Context
@inject IGenericAttributeService _GenericAttributeService
@inject IPictureService _PictureService
@inject MediaSettings _mediaSettings
@{
    var user = await _Context.GetCurrentCustomerAsync();
    var phone = await _GenericAttributeService.GetAttributeAsync<string>(user, NopCustomerDefaults.PhoneAttribute);

    var picture = await _PictureService.GetPictureUrlAsync(
        await _GenericAttributeService.GetAttributeAsync<int>(user, NopCustomerDefaults.AvatarPictureIdAttribute),
        _mediaSettings.AvatarPictureSize,
        true);
}
<nav class="mb-4" aria-label="Breadcrumb">
    <ol class="breadcrumb">
        <li class="breadcrumb-item">
            <a asp-controller="Home" asp-action="Index">Home</a>
        </li>
        <li class="breadcrumb-item active" aria-current="page">@Model.CustomerNavigationItems[0].Title</li>
    </ol>
</nav>
<aside class="col-lg-4 col-md-5 pe-xl-4 mb-5">
    <!-- Account nav-->
    <div class="card card-body border-0 shadow-sm pb-1 me-lg-1">
        <div class="d-flex d-md-block d-lg-flex align-items-start pt-lg-2 mb-4">
            <img class="rounded-circle" src="@picture" width="48" alt="@user.Username">
            <div class="pt-md-2 pt-lg-0 ps-3 ps-md-0 ps-lg-3">
                <h2 class="fs-lg mb-0">@user.Username</h2>
                @*<span class="star-rating">
                    <i class="star-rating-icon fi-star-filled active"></i>
                    <i class="star-rating-icon fi-star-filled active"></i>
                    <i class="star-rating-icon fi-star-filled active"></i>
                    <i class="star-rating-icon fi-star-filled active"></i>
                    <i class="star-rating-icon fi-star-filled active"></i>
                </span>*@
                <ul class="list-unstyled fs-sm mt-3 mb-0">
                    <li>
                        <a class="nav-link fw-normal p-0" href="tel:@phone">
                            <i class="fi-phone opacity-60 me-2"></i>@phone
                        </a>
                    </li>
                    <li>
                        <a class="nav-link fw-normal p-0" href="mailto:@user.Email">
                            <i class="fi-mail opacity-60 me-2"></i>@user.Email
                        </a>
                    </li>
                </ul>
            </div>
        </div>
        @*<a class="btn btn-primary btn-lg w-100 mb-3" href="real-estate-add-property.html">
            <i class="fi-plus me-2"></i>Predaj Oglas
        </a>*@
        <a class="btn btn-outline-secondary d-block d-md-none w-100 mb-3" href="#account-nav" data-bs-toggle="collapse">
            <i class="fi-align-justify me-2"></i>Menu
        </a>
        <div class="collapse d-md-block mt-3" id="account-nav">
            <div class="card-nav">
                <a class="card-nav-link @(((CustomerNavigationItem) Model.SelectedTab) == CustomerNavigationItem.Info ? "active" : "")"
                   asp-controller="Customer" asp-action="Info">
                    <i class="fi-user opacity-60 me-2"></i>Personal Info
                </a>
                <a class="card-nav-link @(((CustomerNavigationItem) Model.SelectedTab) == CustomerNavigationItem.ChangePassword ? "active" : "")"
                   asp-controller="Customer" asp-action="ChangePassword">
                    <i class="fi-lock opacity-60 me-2"></i>Password &amp; Security
                </a>
                <a class="card-nav-link @(((CustomerNavigationItem) Model.SelectedTab) == CustomerNavigationItem.CustomerAds ? "active" : "")"
                   asp-controller="CustomerInfo" asp-action="CustomerAds">
                    <i class="fi-home opacity-60 me-2"></i>Customer Ads
                </a>
                <a class="card-nav-link @(((CustomerNavigationItem) Model.SelectedTab) == CustomerNavigationItem.Avatar ? "active" : "")"
                   asp-controller="Customer" asp-action="Avatar">
                    <i class="fi-flame opacity-60 me-2"></i>Avatar
                </a>
                <a class="card-nav-link @((CustomerNavigationItem) Model.SelectedTab == CustomerNavigationItem.WishList ? "active" : "")"
                   asp-controller="ShoppingCart" asp-action="Wishlist">
                    <i class="fi-heart opacity-60 me-2"></i>Wishlist
                </a>
                @*<a class="card-nav-link @((CustomerNavigationItem) Model.SelectedTab == CustomerNavigationItem.ProductReviews ? "active" : "")" asp-controller="Product" asp-action="CustomerProductReviews">
                    <i class="fi-star opacity-60 me-2"></i>Reviews
                </a>*@
                <a class="card-nav-link @((CustomerNavigationItem) Model.SelectedTab == CustomerNavigationItem.Notification ? "active" : "")"
                   asp-controller="CustomerInfo" asp-action="Notification">
                    <i class="fi-bell opacity-60 me-2"></i>Notifications
                </a>
                @*<a class="card-nav-link" href="real-estate-help-center.html">
                    <i class="fi-help opacity-60 me-2"></i>Help
                </a>*@
                <a class="card-nav-link" href="@Url.RouteUrl("Logout")">
                    <i class="fi-logout opacity-60 me-2"></i>Sign Out
                </a>
            </div>
        </div>
    </div>
</aside>
@*<div class="block block-account-navigation">
    <div class="title">
        <strong>@T("Account.Navigation")</strong>
    </div>
    <div class="listbox">
        <ul class="list">
            @await Component.InvokeAsync("Widget", new { widgetZone = PublicWidgetZones.AccountNavigationBefore, additionalData = Model })
            @foreach (var item in Model.CustomerNavigationItems)
            {
                <li class="@item.ItemClass @(Model.SelectedTab == item.Tab ? "active" : "inactive")">
                    <a href="@Url.RouteUrl(item.RouteName)">@(item.Title)</a>
                </li>
            }
            @await Component.InvokeAsync("Widget", new { widgetZone = PublicWidgetZones.AccountNavigationAfter, additionalData = Model })
        </ul>
    </div>
</div>*@