@model CatalogProductsModel
@inject IHtmlHelper _htmlHelper

@if (!string.IsNullOrEmpty(Model.WarningMessage))
{
    <div class="warning">
        @Model.WarningMessage
    </div>
}

@if (Model.Products.Count > 0)
{
    if (Model.ViewMode == "list")
    {
        <div class="row">
            @foreach (var product in Model.Products)
            {
                <div class="col-sm-3 mb-4">
                    @await Html.PartialAsync("_ProductBoxHorizontal", product)
                </div>
            }
        </div>
    }
    else
    {
        <div class="row">
            @foreach (var product in Model.Products)
            {
                <div class="col-sm-3 mb-4">
                    @await Html.PartialAsync("_ProductBox", product)
                </div>
            }
        </div>
    }
    @*<div class="@(Model.ViewMode == "list" ? "product-list" : "product-grid")">
        <div class="item-grid">
            @foreach (var product in Model.Products)
            {
                <div class="item-box">
                    @await Html.PartialAsync("_ProductBox", product)
                </div>
            }
        </div>
    </div>*@

    var pager = new Nop.Web.Controllers.SaljiDalje.Core.Pager(Model, _htmlHelper.ViewContext)
        .QueryParam("pagenumber")
        .MainUlCssClass("pagination mb-1")
        .IndividualPageCssClass("page-item d-none d-sm-block")
        .CurrentPageCssClass("page-item active d-none d-sm-block")
        .PreviousPageCssClass("page-item")
        .NextPageCssClass("page-item")
        // for search page
        .BooleanParameterName("advs")
        .BooleanParameterName("isc")
        .BooleanParameterName("sid")
        .RenderEmptyParameters(true);

    @if (!await pager.IsEmpty())
    {
        <nav class="border-top pb-md-4 pt-4" aria-label="Pagination">
            @pager
        </nav>
    }
}
else if (!string.IsNullOrEmpty(Model.NoResultMessage))
{
    <div class="no-result">
        @Model.NoResultMessage
    </div>
}